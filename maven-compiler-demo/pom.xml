<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.hyxt</groupId>
		<artifactId>maven-demo</artifactId>
		<version>1.0.1-SNAPSHOT</version>
		<!--<relativePath/> &lt;!&ndash; lookup parent from repository &ndash;&gt;-->
	</parent>

	<groupId>com.hyxt</groupId>
	<artifactId>maven-compiler-demo</artifactId>
	<version>1.0.1-SNAPSHOT</version>
	<name>maven-compiler-demo</name>
	<description>Demo project for Spring Boot</description>



	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				 <configuration>
					 <!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中不能使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->
					 <source>1.8</source> <!-- 源代码使用的JDK版本 -->
					 <target>1.8</target> <!-- 需要生成的目标class文件的编译版本 -->
					 <encoding>UTF-8</encoding><!-- 字符集编码 -->

					 <verbose>true</verbose>
					 <showWarnings>true</showWarnings>
					 <fork>true</fork><!-- 要使compilerVersion标签生效，还需要将fork设为true，用于明确表示编译版本配置的可用 -->
					 <executable><!-- path-to-javac --></executable><!-- 使用指定的javac命令，例如：<executable>${JAVA_1_4_HOME}/bin/javac</executable> -->
					 <compilerVersion>1.3</compilerVersion><!-- 指定插件将使用的编译器的版本 -->
					 <meminitial>128m</meminitial><!-- 编译器使用的初始内存 -->
					 <maxmem>512m</maxmem><!-- 编译器使用的最大内存 -->
					 <compilerArgs> <!-- 这个选项用来传递编译器自身不包含但是却支持的参数选项 -->
						 <arg>-verbose</arg>
						 <arg>-Xlint:all,-options,-path</arg>
					 </compilerArgs>
				 </configuration>
			</plugin>
		</plugins>
	</build>

</project>
